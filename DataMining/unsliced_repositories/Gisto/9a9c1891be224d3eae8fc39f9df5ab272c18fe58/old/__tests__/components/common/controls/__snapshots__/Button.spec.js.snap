// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`COMPONENTS - <Button> render Button 1`] = `
<Button
  className="btn"
  disabled={false}
  height="30px"
  icon="menu"
  invert={true}
  onClick={[MockFunction]}
  theme={
    Object {
      "ligten": [Function],
      "theme": Object {
        "baseAppColor": "#3F84A8",
        "bg": "#ebf2f6",
        "borderColor": "#ccc",
        "boxShadow": "#555",
        "colorDanger": "tomato",
        "colorSuccess": "cadetblue",
        "colorWarning": "#e0b01e",
        "disabledColor": "#ccc",
        "headerBgLightest": "#cfe0e9",
        "headerColor": "#fff",
        "lightBorderColor": "#f2f2f2",
        "lightText": "#fff",
        "textColor": "#555",
      },
      "tintBackground": [Function],
      "tintHeaderBgLightest": [Function],
    }
  }
  width="200px"
>
  <ButtonComponent
    className="btn"
    disabled={false}
    height="30px"
    invert={true}
    onClick={[MockFunction]}
    width="200px"
  >
    <StyledComponent
      className="btn"
      disabled={false}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "ButtonComponent-fVGrXr",
            "isStatic": false,
            "lastClassName": "eqyqRk",
            "rules": Array [
              "background:",
              [Function],
              ";border:1px solid ",
              [Function],
              ";color:",
              [Function],
              ";border-radius:3px;font-weight:200;font-size:14px;text-align:center;",
              [Function],
              " ",
              [Function],
              " -webkit-appearance:none;cursor:pointer;align-items:center;display:flex;white-space:pre;&[disabled]{background:",
              [Function],
              ";border:1px solid ",
              [Function],
              ";color:",
              [Function],
              ";cursor:not-allowed;}",
            ],
          },
          "displayName": "ButtonComponent",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "ButtonComponent-fVGrXr",
          "target": "button",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      height="30px"
      invert={true}
      onClick={[MockFunction]}
      width="200px"
    >
      <button
        className="btn ButtonComponent-fVGrXr eqyqRk"
        disabled={false}
        height="30px"
        onClick={[MockFunction]}
        width="200px"
      >
        <Icon
          type="menu"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Icon-cFRQJw",
                  "isStatic": false,
                  "lastClassName": "dIRwHy",
                  "rules": Array [
                    "background-color:",
                    [Function],
                    ";display:inline-block;vertical-align:middle;width:",
                    [Function],
                    "px;height:",
                    [Function],
                    "px;mask-image:url('src/icons/",
                    "ionic",
                    "/",
                    [Function],
                    "');mask-repeat:no-repeat;mask-size:contain;mask-position:center;",
                    [Function],
                    " ",
                    [Function],
                    " ",
                    [Function],
                  ],
                },
                "displayName": "Icon",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "Icon-cFRQJw",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            type="menu"
          >
            <span
              className="Icon-cFRQJw dIRwHy"
              type="menu"
            />
          </StyledComponent>
        </Icon>
         
        link
      </button>
    </StyledComponent>
  </ButtonComponent>
</Button>
`;
