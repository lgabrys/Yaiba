define(
  ['require', 'apres', 'jquery', 'bootstrap', 'underscore'],
  function(require, apres, $, bootstrap, _) {
    var CollaboratorWidget = function(elem, params) {
      var elem = $(elem);
      var table = elem.find(".table");
      var tmpl = $("#collaborator-table-row");
      var loading = $("#collaborator-loading");
      var compiled_template = _.template(tmpl.html());
      var loading_template = _.template(loading.html())
      var id_item_map;
      var results;

      function message(message, classes) {
        elem.find("div.alert").removeClass().addClass("alert " + classes).html(message).show();
      }

      function message_hide() {
        elem.find("div.alert").hide();
      }

      // Render the table
      function render(results) {
        // Reset contents of elem
        table.html("");
        // Reset id -> item map
        id_item_map = {};
        // Sort results so owner is first
        results = _.sortBy(results, function(item) {
          if (item.owner) {
            return -1;
          } else {
            return 1;
          }
        });
        _.each(results, function(item) {
          var uuid = _.uniqueId("collaborators");
          id_item_map[uuid] = item;
          item.uuid = uuid;
          var el = compiled_template(item);
          table.append(el);
        });
      }

      // Fetch & render the list of collaborators
      function load(url) {
        var el = loading_template();
        table.html(el);
        $.ajax({
          url: "/api/collaborators",
          type: "GET",
          data: {url: url},
          dataType: "json",
          success: function (data, ts, xhr) {
            results = data.results;
            render(results);
          },
          error: function(xhr, ts, e) {
            if (xhr && xhr.responseText) {
                var data = $.parseJSON(xhr.responseText);
                message("Error loading collaborators: " + data.errors[0], "alert-error");
            } else {
                message("Error loading collaborators: " + e, "alert-error");
            }
          }

        });
      }

      // Delete a collaborator & render the list
      function del(url, email) {
        $.ajax({
          url: "/api/collaborators",
          type: "DELETE",
          data: {email: email, url: url},
          success: function(data, ts, xhr) {
            results = _.reject(results, function(item) {
              return item.email === email;
            });
            render(results);
            message(email + " is no longer a collaborator on this project.", "alert-success");
          },
          error: function(xhr, ts, e) {
            if (xhr && xhr.responseText) {
                var data = $.parseJSON(xhr.responseText);
                message("Error deleting collaborator: " + data.errors[0], "alert-error");
            } else {
                message("Error deleting collaborator: " + e, "alert-error");
            }
          }
        });
      }

      // Add a collaborator
      function add(url, email, access_level) {
        var data = {email: email, url: url};
        if (access_level) {
          data.access_level = access_level;
        }
        $.ajax({
          url: "/api/collaborators",
          type: "POST",
          data: data,
          dataType: "json",
          success: function(data, ts, xhr) {
            message(data.results[0].message, "alert-success");
            load(repo_url);
          },
          error: function(xhr, ts, e) {
            if (xhr && xhr.responseText) {
                var data = $.parseJSON(xhr.responseText);
                message("Error adding collaborator: " + data.errors[0], "alert-error");
            } else {
                message("Error adding collaborator: " + e, "alert-error");
            }
          }
        });
      }

      // Handy bindings
      this.events = {
        'click .btn-add-collab': function() {
          // Add
          var email = elem.find(".collab-email").val();
          // Simple validation
          if (email && email.length > 0) {
            add(repo_url, email);
          } else {
            message("Invalid email address", "alert-error");
          }
        },
        'click .icon-remove': function(ev) {
          var c = id_item_map[$(ev.target).attr('id')];
          del(repo_url, c.email);
        }
      };

      // There is a global "repo" object which is generated by the server
      var repo_url = apres.controller().params.repo_url;
      load(repo_url);

    };

    return CollaboratorWidget;
  }
);
